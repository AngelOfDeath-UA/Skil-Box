# -*- coding: utf-8 -*-

# Игра «Быки и коровы»
# https://goo.gl/Go2mb9
#
# Правила:
# Компьютер загадывает четырехзначное число, все цифры которого различны
# (первая цифра числа отлична от нуля). Игроку необходимо разгадать задуманное число.
# Игрок вводит четырехзначное число c неповторяющимися цифрами,
# компьютер сообщают о количестве «быков» и «коров» в названном числе
# «бык» — цифра есть в записи задуманного числа и стоит в той же позиции,
#       что и в задуманном числе
# «корова» — цифра есть в записи задуманного числа, но не стоит в той же позиции,
#       что и в задуманном числе
#
# Например, если задумано число 3275 и названо число 1234,
# получаем в названном числе одного «быка» и одну «корову».
# Очевидно, что число отгадано в том случае, если имеем 4 «быка».
#
# Формат ответа компьютера
# > быки - 1, коровы - 1


# Составить отдельный модуль mastermind_engine, реализующий функциональность игры.
# В этом модуле нужно реализовать функции:
#   загадать_число()
#   проверить_число(NN) - возвращает словарь {'bulls': N, 'cows': N}
# Загаданное число хранить в глобальной переменной.
# Обратите внимание, что строки - это список символов.
#
# В текущем модуле (lesson_006/01_mastermind.py) реализовать логику работы с пользователем:
#   модуль движка загадывает число
#   в цикле, пока число не отгадано
#       у пользователя запрашивается вариант числа
#       модуль движка проверяет число и выдает быков/коров
#       результат быков/коров выводится на консоль
#  когда игрок угадал таки число - показать количество ходов и вопрос "Хотите еще партию?"
#
# При написании кода учитывайте, что движок игры никак не должен взаимодействовать с пользователем.
# Все общение с пользователем делать в текущем модуле. Представьте, что движок игры могут использовать
# разные клиенты - веб, чатбот, приложение, етс - они знают как спрашивать и отвечать пользователю.
# Движок игры реализует только саму функциональность игры.
# Это пример применения SOLID принципа (см https://goo.gl/GFMoaI) в архитектуре программ.
# Точнее, в этом случае важен принцип единственной ответственности - https://goo.gl/rYb3hT
#
# 'grey',
#             'red',
#             'green',
#             'yellow',
#             'blue',
#             'magenta',
#             'cyan',
#             'white',


from mastermind_engine import generated_hidden_number, check_number
from termcolor import cprint

cprint('\n\nПривет. Добро пожаловать в игру «Быки и коровы».', color='blue')
cprint('Хочешь ознакомиться с правилами игры? Или сразу в бой?\n', color='blue')
cprint('Напиши Да если хочешь ознакомиться с правилами \n'
       'Или Нет и давай играть!', color='blue')
go_or_rules = input()
if go_or_rules == 'Да':
    cprint(
        'Компьютер загадывает четырехзначное число, все цифры которого различны (первая цифра числа отлична от нуля).\n'
        'Игроку необходимо разгадать задуманное число.Игрок вводит четырехзначное число c неповторяющимися цифрами,\n'
        'компьютер сообщают о количестве «быков» и «коров» в названном числе«бык» — цифра есть в записи задуманного \n'
        'числа и стоит в той же позиции, что и в задуманном числе«корова» — цифра есть в записи задуманного числа, \n'
        'но не стоит в той же позиции,что и в задуманном числеНапример, если задумано число 3275 и названо число \n'
        '1234,получаем в названном числе одного «быка» и одну «корову».Очевидно, что число отгадано в том случае, \n'
        'если имеем 4 «быка».', color='blue')
    cprint('Продолжим?',color='blue')
    go_or_rules = input()
    if go_or_rules == 'Нет':
        exit(cprint('Жалко... Закрываюсь...', color='blue'))

cprint('Принял! Теперь я загадал число!', color='blue')
generated_hidden_number()
cprint('Ну что - же, отгадывай!\n\n', color='blue')

while True:
    cprint('Какое число будешь проверять?', color='blue')
    IMPORT_VALUE = int(input())
    check_number(IMPORT_VALUE)
    if IMPORT_VALUE > 10000 or IMPORT_VALUE < 1111:
        cprint('Загадай 4х значное число!', color='blue')
        IMPORT_VALUE = input()
    print('Коров - ', check_number()['cows'], 'Быков - ', check_number()['bulls'])
    #TODO тупик с возвращением словаря коров и быков из check_number
#TODO добавить игроков
#TODO добавить окончание игры
#TODO добавить функцию переиграть
#TODO если игрок не хочет играть ещё раз добавить описание создателя